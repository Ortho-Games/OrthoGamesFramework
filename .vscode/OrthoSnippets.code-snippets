{
  // Place your OrthogonalFramework workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Global": {
    "scope": "lua,luau",
    "prefix": "global",
    "body": [
      "local ReplicatedStorage = game:GetService(\"ReplicatedStorage\")",
      "local ServerStorage = game:GetService(\"ServerStorage\")",
      "",
      "local Global = require(ReplicatedStorage.Shared.Global)"
    ],
    "description": "Create the Global + Replicated Storage variable for easy file creation."
  },
  "newsys": {
    "scope": "lua,luau",
    "prefix": "newsys",
    "body": [
      "local ReplicatedStorage = game:GetService(\"ReplicatedStorage\")",
      "local ServerStorage = game:GetService(\"ServerStorage\")",
      "",
      "local Global = require(ReplicatedStorage.Shared.Global)",
      "",
      "return Global.Schedules.$1.job(function()",
      "$2",
      "end)"
    ]
  },
  "newcomp": {
    "scope": "lua,luau",
    "prefix": "newcomp",
    "body": [
      "local ReplicatedStorage = game:GetService(\"ReplicatedStorage\")",
      "local ServerStorage = game:GetService(\"ServerStorage\")",
      "",
      "local Global = require(ReplicatedStorage.Shared.Global)",
      "",
      "local $1 = {}",
      "",
      "function $1:add(entity)",
      "    -- insert constructor for component here",
      "end",
      "",
      "return Global.World.factory($1)"
    ],
    "description": "Create Global, World, And Component Setup"
  },
  "package": {
    "scope": "lua,luau",
    "prefix": "package",
    "body": [
      "local $1 = require(ReplicatedStorage.Packages.$1)"
    ],
    "description": "Shortcut for requiring packages, Requires Global above it."
  },
  "vendor": {
    "scope": "lua,luau",
    "prefix": "vendor",
    "body": [
      "local $1 = require(ReplicatedStorage.Vendor.$1)"
    ],
    "description": "Shortcut for requiring vendor packages, Requires Global above it."
  },
  "server": {
    "scope": "lua,luau",
    "prefix": "server",
    "body": [
      "require(ServerStorage.Server.$1)"
    ],
    "description": "Shortcut for requiring making a server require."
  },
  "client": {
    "scope": "lua,luau",
    "prefix": "client",
    "body": [
      "require(ReplicatedStorage.Client.$1)"
    ],
    "description": "Shortcut for requiring making a client require."
  },
  "shared": {
    "scope": "lua,luau",
    "prefix": "shared",
    "body": [
      "require(ReplicatedStorage.Shared.$1)"
    ],
    "description": "Shortcut for requiring making a shared require."
  },
}